AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: MGDC - Michtos API

Parameters:
  Project:
    Type: String
    Description: Project name
    Default: "Meta Gold Digger Club"
  App:
    Type: String
    Description: Application environment name
    Default: mgdc
  Stage:
    Type: String
    Description: Application environment stage
    Default: test
    AllowedValues:
      - dev
      - test
      - staging
      - prod
  LogRetentionInDays:
    Type: Number
    Description: CloudWatch Logs retention period before deletion
    Default: 14

Globals:
  Function:
    Handler: index.handler
    Runtime: nodejs14.x
    Timeout: 60
    Environment:
      Variables:
        MICHTOS_DB: !Ref MichtosTable
    Tags:
      App: !Ref App
      Stage: !Ref Stage
      Project: !Ref Project

Resources:
  # Api

  MichtosApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${Stage}-${App}-michtos-api
      StageName: !Ref Stage
      EndpointConfiguration:
        Type: REGIONAL
      Cors:
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: "'3600'"
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE'"
      GatewayResponses:
        DEFAULT_4xx:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT,DELETE'"
        DEFAULT_5xx:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT,DELETE'"
      Tags:
        App: !Ref App
        Stage: !Ref Stage
        Project: !Ref Project

  AddMichtos:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/add-michtos/
      FunctionName: !Sub ${Stage}-${App}-add-michtos
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MichtosTable
      Events:
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MichtosApi
            Path: /
            Method: POST

  GetMichto:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-michto/
      FunctionName: !Sub ${Stage}-${App}-get-michto
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MichtosTable
      Events:
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MichtosApi
            Path: /{id}
            Method: GET

  ListMichtos:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/list-michtos/
      FunctionName: !Sub ${Stage}-${App}-list-michtos
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MichtosTable
      Events:
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MichtosApi
            Path: /
            Method: GET

  FreeMichtos:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/free-michtos/
      FunctionName: !Sub ${Stage}-${App}-free-michtos
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MichtosTable
      Events:
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MichtosApi
            Path: /free-michtos
            Method: GET

  # Table

  MichtosTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Stage}-${App}-michtos
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: App
          Value: !Ref App
        - Key: Stage
          Value: !Ref Stage
        - Key: Project
          Value: !Ref Project

  # Logs

  AddMichtosLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-add-michtos
      RetentionInDays: !Ref LogRetentionInDays

  GetMichtoLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-get-michto
      RetentionInDays: !Ref LogRetentionInDays

  ListMichtosLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-list-michtos
      RetentionInDays: !Ref LogRetentionInDays

  FreeMichtosLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-free-michtos
      RetentionInDays: !Ref LogRetentionInDays

Outputs:
  MichtosApiDomain:
    Description: "Michtos API default base domain"
    Value: !Sub https://${MichtosApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
