AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: MGDC - Breed API

Parameters:
  Project:
    Type: String
    Description: Project name
    Default: "Meta Gold Digger Club"
  App:
    Type: String
    Description: Application environment name
    Default: mgdc
  Stage:
    Type: String
    Description: Application environment stage
    Default: test
    AllowedValues:
      - dev
      - test
      - staging
      - prod
  LogRetentionInDays:
    Type: Number
    Description: CloudWatch Logs retention period before deletion
    Default: 14
  ApiDomain:
    Type: String
    Description: Custom Api domain name
    Default: api.metagolddiggerclub.com

Globals:
  Function:
    Handler: index.handler
    Runtime: nodejs14.x
    Timeout: 60
    Environment:
      Variables:
        BREED_DB:
          Fn::ImportValue: !Sub ${Stage}-${App}-breed-table
    Tags:
      App: !Ref App
      Stage: !Ref Stage
      Project: !Ref Project

Resources:
  # Api

  BreedApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${Stage}-${App}-breed-api
      StageName: !Ref Stage
      EndpointConfiguration:
        Type: REGIONAL
      Cors:
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: "'3600'"
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE'"
      GatewayResponses:
        DEFAULT_4xx:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT,DELETE'"
        DEFAULT_5xx:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              Access-Control-Allow-Origin: "'*'"
              Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PUT,DELETE'"
      Tags:
        App: !Ref App
        Stage: !Ref Stage
        Project: !Ref Project

  RestApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    DeletionPolicy: Delete
    Properties:
      ApiId: !Ref BreedApi
      ApiMappingKey: !Sub ${Stage}/breed
      DomainName: !Ref ApiDomain
      Stage: !Ref BreedApi.Stage

  BreedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/breed/
      FunctionName: !Sub ${Stage}-${App}-breed
      Environment:
        Variables:
          BREED_PREFIX_SOURCE: !Sub ${Stage}.${App}
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub ${Stage}-${App}-breed-table
        - EventBridgePutEventsPolicy:
            EventBusName: default
      Events:
        BreedEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BreedApi
            Path: /{owner}
            Method: PUT

  MatchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/match/
      FunctionName: !Sub ${Stage}-${App}-match
      Environment:
        Variables:
          CHATS_DB:
            Fn::ImportValue: !Sub ${Stage}-${App}-chats-table
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub ${Stage}-${App}-breed-table
        - DynamoDBCrudPolicy:
            TableName:
              Fn::ImportValue: !Sub ${Stage}-${App}-chats-table
      Events:
        MatchEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BreedApi
            Path: /
            Method: POST

  ListBreedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/list-breed/
      FunctionName: !Sub ${Stage}-${App}-list-breed
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub ${Stage}-${App}-breed-table
      Events:
        ListBreedEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BreedApi
            Path: /{owner}
            Method: GET

  ListMgdcBreedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/list-mgdc-breed/
      FunctionName: !Sub ${Stage}-${App}-list-mgdc-breed
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Fn::ImportValue: !Sub ${Stage}-${App}-breed-table
      Events:
        ListBreedEvent:
          Type: Api
          Properties:
            RestApiId: !Ref BreedApi
            Path: /mgdc/{to}
            Method: GET

  # Logs

  BreedLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-breed
      RetentionInDays: !Ref LogRetentionInDays

  MatchLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-match
      RetentionInDays: !Ref LogRetentionInDays

  ListBreedLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-list-breed
      RetentionInDays: !Ref LogRetentionInDays

  ListMgdcBreedLog:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Stage}-${App}-list-mgdc-breed
      RetentionInDays: !Ref LogRetentionInDays

Outputs:
  BreedApiDomain:
    Description: "Breed API default base domain"
    Value: !Sub https://${BreedApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
